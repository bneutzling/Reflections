When would you want to use a remote repository rather than keeping all your work local?
- You would want to use a remote repository if you want to work with a group of contributors, if you workon multiple devices
and want an easy way to share your progress between them, or if you want an extra copy of your project online as backup.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote
repository?
- You would want to pull changes manually so you are always aware and prepared for those changes. If Git automatically updated
your repository for you, you may lose track of the changes that were made. Git also automatically updates the head after a 
pull, so if you're currently working on another commit, it may conflict with your current work.

Describe the differences between forks, clones, and branches. When should you use one istead of another?
- Forks clone a repository on GitHub to your GitHub profile, making it easy to make your own personal version of a repository
while still offering credit to the original author. Clones copy a repository to Git without creating a new remote, so you
can work on a repository remotely and add to the original remote. Branches start a new line of commits without updating 
your main files, allowing you to experiment freely.

What is the benefit of having a copy of the last known state of the remote stored locally?
- It allows you to make changes to the files in the repository without needing to worry about conflicts from merging.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- You would have to find another way to share code. You could pass updates back and forth through a portable drive,
through e-mail, a personal server, etc. You would also have to keep track of every detail of everything you do to
stay organized and keep all your collaborators up-to-date. This would be very difficult to do on your own, as Git
and GitHub already have an organized system set up to do this for you. The only thing that would be easier about using 
a method besides Git and GitHub would be that you don't have to learn how to use Git and GitHub. However, you would need
to implement an organized system of your own, and communicate that with your collaborators anyways. 